<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0"
    />
    <title>POS Pay</title>
    <link
      rel="stylesheet"
      type="text/css"
      href="styles/POS_pay.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
    />
    <!-- socket.io -->
    <script
      src="https://cdn.socket.io/4.6.0/socket.io.min.js"
      integrity="sha384-c79GN5VsunZvi+Q/WObgk2in0CbZsHnjEqvFxC5DxHn9lTfNce2WW6h2pH6u/kF+"
      crossorigin="anonymous"
    ></script>
    <script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4=" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"/>
    <link rel="stylesheet" type="text/css" href="styles/receipt.css">
  </head>
  <body>
    <div class="res">
      <div class="top-container">
        <h1>Restaurant's name</h1>
        <!--search bar-->
        <div class="search-bar">
          <input
            type="text"
            class="type-search"
            placeholder="SEARCH"
            onkeyup="searchsomething(this)"
            id="tet_search"
          />
        </div>
        <!--search bar-->
      </div>

      <div class="main-container">
        <!--ordered sum-->
        <div class="cover-box">
          <!-- Existing order containers will be populated here -->
        </div>
        <!--Ordered sum-->
      </div>

      <div class="footer">
        <!-- order-sum icon -->
        <a
          href="/restaurant_done"
          target="_blank"
        >
          <i class="fas fa-list" style="color: #000000"></i>
        </a>
        <!-- cash icon -->
        <a
          href="/restaurant_pay"
          target="_blank"
        >
          <i class="fa-solid fa-cash-register" style="color: #000000"></i>
        </a>
      </div>
  </div>

    <div class="receipt" style="display: none;">
     <!--  -->
    </div>
  </body>

  <script>
    let orders_pay = [];

    if (localStorage.getItem("orders_pay")) {
      orders_pay = JSON.parse(localStorage.getItem("orders_pay"));
    }

    const socket = io.connect('https://hmv8210m-8000.asse.devtunnels.ms');
    const show = document.querySelector('.cover-box');

    socket.on('pay', (doneOrder) => {
      const customer = doneOrder.customer;
      const cart = doneOrder.cart;
      const orderType = doneOrder.orderType;
      const orderTime = doneOrder.currentTime;
      const orderCount = orders_pay.length + 1;
      const total_price = cart.reduce(
        (total, item) => total + item.count * item.price,
        0
      );

      const orderHeader = `<div class="sum-container">
            <div class="table-no">
                <h1>Order No.${orderCount}</h1>
            </div>
            <p>Order Time: ${orderTime}</p>
            <div class="customer-detail">
                <div class="customer-detail-left">
                  <p>${customer}</p>
                </div>
                <div class="take-or-dine">
                  <p>${orderType}</p>
                </div>
            </div>
            <p>-------------------------------------------------</p>`;

      const menuItems = cart
        .map(
          (item) => `<div class="menubox">
                <div class="left">
                    <div class="menu-name">
                        <p>${item.name}</p>
                    </div>
                    <div class="add-on">
                        <p>${item.addon}</p>
                    </div>
                </div>
                <div class="right">
                    <p>${(item.count * item.price).toFixed(2)}</p>
                </div>
            </div>`
        )
        .join('');

      const doneButton = `<div class="total-container">
            <div class="total">
                <h2>Total</h2>
            </div>
            <div class="total-price">
                <h2>${total_price.toFixed(2)}</h2>
            </div>
        </div>
        <div class="pay-container" onclick="pay(${orderCount - 1})">
            <h2 class="pay">PAY</h2>
        </div>
        </div>
        </div>`;

      show.innerHTML += orderHeader + menuItems + doneButton;

      orders_pay.push(doneOrder);

      localStorage.setItem('orders_pay', JSON.stringify(orders_pay));
    });

    function pay(orderIndex) {
      // save the order to the local storage
      receipt_click(orders_pay[orderIndex]);
      orders_pay.splice(orderIndex, 1);
      localStorage.setItem('orders_pay', JSON.stringify(orders_pay));
      const orderContainers = document.querySelectorAll('.sum-container');
      orderContainers[orderIndex].remove();
    }

    function initializeOrderDisplay() {
      for (let i = 0; i < orders_pay.length; i++) {
        const order = orders_pay[i];

        const total_price = order.cart.reduce(
          (total, item) => total + item.count * item.price,
          0
        );

        const orderHeader = `<div class="sum-container">
            <div class="table-no">
                <h1>Order No.${i + 1}</h1>
            </div>
            <p>Order Time: ${order.currentTime}</p>
            <div class="customer-detail">
                <div class="customer-detail-left">
                  <p>${order.customer}</p>
                </div>
                <div class="take-or-dine">
                  <p>${order.orderType}</p>
                </div>
            </div>
            <p>-------------------------------------------------</p>`;

        const menuItems = order.cart
          .map(
            (item) => `<div class="menubox">
                <div class="left">
                    <div class="menu-name">
                        <p>${item.name}</p>
                    </div>
                    <div class="add-on">
                        <p>${item.addon}</p>
                    </div>
                </div>
                <div class="right">
                    <p>${numberWithCommas((item.count * item.price).toFixed(2))}</p>
                </div>
            </div>`
          )
          .join('');

        const doneButton = `<div class="total-container">
            <div class="total">
                <h2>Total</h2>
            </div>
            <div class="total-price">
                <h2>${numberWithCommas(total_price.toFixed(2))}</h2>
            </div>
        </div>
        <div class="pay-container" onclick="pay(${i})">
            <h2 class="pay">PAY</h2>
        </div>
        </div>
        </div>`;

        show.innerHTML += orderHeader + menuItems + doneButton;
      }
    }

    window.onload = initializeOrderDisplay;

    function numberWithCommas(x) {
        x = x.toString();
        var pattern = /(-?\d+)(\d{3})/;
        while (pattern.test(x))
            x = x.replace(pattern, "$1,$2");
        return x;
      }

    function receipt_click(orders_pay_now) {
      const res = document.querySelector('.res');
      res.style.display = 'none';

      const receipt = document.querySelector('.receipt');
      receipt.style.width = 'max-content';
      // Set margin to center
      receipt.style.margin = 'auto';
      receipt.style.display = '';

      // Show the receipt
      const currentDate = new Date();
      // Date format: DD/MM/YYYY
      const day = currentDate.getDate().toString().padStart(2, '0');
      const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');
      const year = currentDate.getFullYear();
      const date = `${day}/${month}/${year}`;
      const now = new Date();
      const hours = now.getHours().toString().padStart(2, '0');
      const minutes = now.getMinutes().toString().padStart(2, '0');
      const seconds = now.getSeconds().toString().padStart(2, '0');
      const currentTime = `${hours}:${minutes}:${seconds}`;
      const cart = orders_pay_now.cart;
      const receiptHeader = `
          <div class="head-container">
              <h2>Receipt</h2>
          </div>
          <div class="container"> 
              <div class="first-line">
                  <div class="rest-name">
                      <p>Restaurant's Name</p>
                  </div>
                  <div class="date">
                      <p>${date}</p>
                  </div>
                  <div class="time">
                      <p>${currentTime}</p>
                  </div>
              </div>
              <p class="line">-------------------------------------------------------------------------</p>
      `;

      const menuItems = cart
          .map(
              (item) => `
                  <div class="order-container">
                      <div class="second-line">
                          <div class="left">
                              <div class="piece">
                                  <p>${item.count}X</p>
                              </div>
                              <div class="food-name">
                                  <p>${item.name}</p>
                              </div>   
                          </div>
                          <div class="price">
                              <p>${numberWithCommas(item.count * item.price)}</p>
                          </div>    
                      </div>
                  </div>
              `
          )
          .join('');

      // Calculate the total price
      const totalPrice = cart.reduce((total, item) => total + item.count * item.price, 0);
      console.log(totalPrice);

      const last = `
          <p class="line">-------------------------------------------------------------------------</p>
          <div class="fourth-line">
              <div class="sum">
                  <p class="total">TOTAL AMOUNT</p>
              </div>
              <div class="total-price">
                  <p id="amount">${numberWithCommas(totalPrice)}</p>
              </div>
          </div>
          <p class="line">-------------------------------------------------------------------------</p>
          <div class="qr-container">
              <div class="qr-pic">
                  <img src="" width="225" id="imgqr">
              </div>
              <p class="line">*************************** THANK YOU! ***************************</p>
          </div>
          <h1 style="margin-left: 125px;" id="Close">Close</h1>
      `;

      // Combine the receipt elements
      const receiptContent = receiptHeader + menuItems + last;

      // Set the HTML content of the receipt container
      receipt.innerHTML = receiptContent;
      genQR(totalPrice);


      // Close the receipt when clicking on the "Close" element
      const close = document.querySelector('#Close');
      close.addEventListener('click', () => {
          receipt.style.display = 'none';
          res.style.display = '';
      });
  }

  function genQR(amount_cus) {
            $.ajax({
                method: 'post',
                url: 'http://localhost:8000/generateQR',
                data: {
                    amount: amount_cus
                },
                success: function(response) {
                    // console.log('good', response)
                    console.log(amount_cus)
                    $("#imgqr").attr('src', response.Result)
                }, error: function(err) {
                    console.log('bad', err)
                }
            })
        }

  </script>
</html>
